# -*- coding: utf-8 -*-
"""pages/01_Tax_Overview_Dashboard.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19j9A2oKYzaJxqcy_wbQ2YntP-Za_PLLB
"""

# pages/01_Tax_Overview_Dashboard.py
import sqlite3, pandas as pd, streamlit as st, altair as alt

DB_PATH = "geotax360.db"

st.set_page_config(page_title="GeoTax360 â€¢ Dashboard", layout="wide")
st.title("Tax Overview Dashboard")

def read_df(sql, params=None):
    conn = sqlite3.connect(DB_PATH)
    df = pd.read_sql_query(sql, conn, params=params or {})
    conn.close()
    return df

# KPIs
collected_year = read_df("SELECT COALESCE(SUM(amount),0) AS v FROM payments")["v"][0]
outstanding    = read_df("SELECT COUNT(*) AS v FROM tax_bills WHERE status='Outstanding'")["v"][0]

c1, c2 = st.columns(2)
c1.metric("Collected (Year)", f"${collected_year:,.0f}")
c2.metric("Outstanding Accounts", f"{outstanding:,}")

st.markdown("### Monthly Collections Trend")
trend = read_df("""
    SELECT substr(paid_at,1,7) AS month, SUM(amount) AS collected
    FROM payments GROUP BY 1 ORDER BY 1
""")
if not trend.empty:
    line = alt.Chart(trend).mark_line(point=True).encode(
        x=alt.X("month:T", title="Month"),
        y=alt.Y("collected:Q", title="US$ Collected"),
        tooltip=["month:T","collected:Q"]
    ).properties(height=320)
    st.altair_chart(line, use_container_width=True)
else:
    st.info("No payment data yet. Add payments to see the trend.")

st.markdown("### Collections vs Potential (Example)")
bars = pd.DataFrame({
    "City":["Harare","Bulawayo"],
    "Current":[100, 30],
    "Potential":[255, 70]
})
curr = alt.Chart(bars).mark_bar(color="#4e79a7").encode(x="City:N", y="Current:Q")
pot  = alt.Chart(bars).mark_bar(color="#59a14f", opacity=0.5).encode(x="City:N", y="Potential:Q")
st.altair_chart((curr + pot), use_container_width=True)